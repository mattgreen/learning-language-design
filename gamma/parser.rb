#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.11
# from Racc grammer file "".
#

require 'racc/parser.rb'

require_relative 'lexer'
require_relative 'ast'

class Parser < Racc::Parser

module_eval(<<'...end grammar.y/module_eval...', 'grammar.y', 112)
def parse(code, show_tokens = false)
  @tokens = Lexer.new.tokenize(code)
  puts @tokens.inspect if show_tokens
  do_parse
end

def next_token
  @tokens.shift
end

...end grammar.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    14,    15,    21,    16,    17,    20,    18,    19,    14,    15,
    21,    16,    17,    20,    18,    19,    39,    55,    13,    54,
    22,    28,    29,    26,    27,    53,    13,    21,    22,    14,
    15,    21,    16,    17,    20,    18,    19,    14,    15,    21,
    16,    17,    20,    18,    19,    22,    23,    13,    21,    22,
    14,    15,    69,    16,    17,    13,    33,    22,    14,    15,
    21,    16,    17,    20,    18,    19,    22,    38,    13,    49,
    21,    65,   nil,    64,    60,   nil,    13,    67,    22,    14,
    15,    21,    16,    17,    20,    18,    19,    58,    22,    28,
    29,    26,    27,    30,    31,    21,    36,    13,    35,    22,
    14,    15,    66,    16,    17,   nil,    33,   nil,    14,    15,
   nil,    16,    17,    22,    33,   nil,    14,    15,    13,    16,
    17,    20,    18,    19,    14,    15,    13,    16,    17,   nil,
    33,   nil,    14,    15,    13,    16,    17,   nil,    33,   nil,
    14,    15,    13,    16,    17,   nil,    33,   nil,    14,    15,
    13,    16,    17,   nil,    33,   nil,    14,    15,    13,    16,
    17,   nil,    33,   nil,    14,    15,    13,    16,    17,    21,
    33,    28,    29,   nil,    13,   nil,    70,    14,    15,    21,
    16,    17,    13,    33,   nil,    57,    56,    22,    14,    15,
   nil,    16,    17,   nil,    33,    13,   nil,    22,    28,    29,
    26,    27,    30,    31,    28,    29,    13,    47,    28,    29,
    26,    27,    30,    31,    28,    29,    26,    27,    30,    31,
    28,    29,    26,    27,    30,    31,    28,    29,    26,    27,
    30,    31,    28,    29,    26,    27 ]

racc_action_check = [
     0,     0,     0,     0,     0,     0,     0,     0,    64,    64,
    64,    64,    64,    64,    64,    64,    23,    50,     0,    50,
     0,    45,    45,    45,    45,    38,    64,    25,    64,    58,
    58,    58,    58,    58,    58,    58,    58,     4,     4,     4,
     4,     4,     4,     4,     4,    25,     1,    58,     2,    58,
    35,    35,    65,    35,    35,     4,    35,     4,    57,    57,
    57,    57,    57,    57,    57,    57,     2,    20,    35,    35,
    63,    59,   nil,    59,    53,   nil,    57,    63,    57,    37,
    37,    37,    37,    37,    37,    37,    37,    53,    63,    37,
    37,    37,    37,    37,    37,    62,    18,    37,    18,    37,
    28,    28,    62,    28,    28,   nil,    28,   nil,    26,    26,
   nil,    26,    26,    62,    26,   nil,    24,    24,    28,    24,
    24,    24,    24,    24,    27,    27,    26,    27,    27,   nil,
    27,   nil,    19,    19,    24,    19,    19,   nil,    19,   nil,
    29,    29,    27,    29,    29,   nil,    29,   nil,    30,    30,
    19,    30,    30,   nil,    30,   nil,    31,    31,    29,    31,
    31,   nil,    31,   nil,    55,    55,    30,    55,    55,    68,
    55,    41,    41,   nil,    31,   nil,    68,    13,    13,    52,
    13,    13,    55,    13,   nil,    52,    52,    68,    36,    36,
   nil,    36,    36,   nil,    36,    13,   nil,    52,    32,    32,
    32,    32,    32,    32,    42,    42,    36,    32,     5,     5,
     5,     5,     5,     5,    48,    48,    48,    48,    48,    48,
    61,    61,    61,    61,    61,    61,    51,    51,    51,    51,
    51,    51,    46,    46,    46,    46 ]

racc_action_pointer = [
    -2,    46,    44,   nil,    35,   196,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   175,   nil,   nil,   nil,   nil,    78,   130,
    59,   nil,   nil,    16,   114,    23,   106,   122,    98,   138,
   146,   154,   186,   nil,   nil,    48,   186,    77,     5,   nil,
   nil,   159,   192,   nil,   nil,     9,   220,   nil,   202,   nil,
    -2,   214,   175,    66,   nil,   162,   nil,    56,    27,    52,
   nil,   208,    91,    66,     6,    44,   nil,   nil,   165,   nil,
   nil ]

racc_action_default = [
    -1,   -42,    -2,    -3,    -7,    -8,    -9,   -10,   -11,   -12,
   -13,   -14,   -15,   -42,   -17,   -18,   -19,   -20,   -32,   -42,
   -42,   -40,   -41,   -42,    -5,    -6,   -42,   -42,   -42,   -42,
   -42,   -42,   -42,   -32,   -27,   -42,   -42,   -42,   -42,    71,
    -4,   -21,   -22,   -23,   -24,   -25,   -26,   -16,   -30,   -28,
   -42,   -33,   -42,   -42,   -29,   -42,   -34,   -42,   -42,   -42,
   -38,   -31,   -42,   -42,   -42,   -42,   -35,   -36,   -42,   -39,
   -37 ]

racc_goto_table = [
    24,     2,    32,     1,    40,    25,    34,    50,    37,    59,
   nil,   nil,   nil,   nil,   nil,    41,    42,    43,    44,    45,
    46,   nil,   nil,    24,    48,    51,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    52,   nil,
   nil,   nil,   nil,   nil,    61,   nil,   nil,   nil,   nil,   nil,
    24,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    62,    63,
    24,    24,   nil,   nil,   nil,    68,    24 ]

racc_goto_check = [
     4,     2,     5,     1,     3,     2,    13,    14,     5,    15,
   nil,   nil,   nil,   nil,   nil,     5,     5,     5,     5,     5,
     5,   nil,   nil,     4,     5,     5,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     2,   nil,
   nil,   nil,   nil,   nil,     5,   nil,   nil,   nil,   nil,   nil,
     4,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     2,     2,
     4,     4,   nil,   nil,   nil,     2,     4 ]

racc_goto_pointer = [
   nil,     3,     1,   -20,    -2,   -11,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   -12,   -28,   -44 ]

racc_goto_default = [
   nil,   nil,   nil,     3,     4,     5,     6,     7,     8,     9,
    10,    11,    12,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 24, :_reduce_1,
  1, 24, :_reduce_2,
  1, 25, :_reduce_3,
  3, 25, :_reduce_4,
  2, 25, :_reduce_5,
  2, 25, :_reduce_6,
  1, 25, :_reduce_7,
  1, 26, :_reduce_none,
  1, 26, :_reduce_none,
  1, 26, :_reduce_none,
  1, 26, :_reduce_none,
  1, 26, :_reduce_none,
  1, 28, :_reduce_none,
  1, 28, :_reduce_none,
  1, 28, :_reduce_none,
  3, 28, :_reduce_16,
  1, 33, :_reduce_17,
  1, 33, :_reduce_18,
  1, 33, :_reduce_19,
  1, 33, :_reduce_20,
  3, 34, :_reduce_21,
  3, 34, :_reduce_22,
  3, 34, :_reduce_23,
  3, 34, :_reduce_24,
  3, 34, :_reduce_25,
  3, 34, :_reduce_26,
  2, 30, :_reduce_27,
  2, 36, :_reduce_28,
  3, 36, :_reduce_29,
  1, 37, :_reduce_30,
  3, 37, :_reduce_31,
  1, 35, :_reduce_32,
  3, 31, :_reduce_33,
  4, 29, :_reduce_34,
  6, 29, :_reduce_35,
  6, 32, :_reduce_36,
  7, 32, :_reduce_37,
  1, 38, :_reduce_38,
  3, 38, :_reduce_39,
  1, 27, :_reduce_none,
  1, 27, :_reduce_none ]

racc_reduce_n = 42

racc_shift_n = 71

racc_token_table = {
  false => 0,
  :error => 1,
  :NUMBER => 2,
  :STRING => 3,
  :NEWLINE => 4,
  :TRUE => 5,
  :FALSE => 6,
  :DEF => 7,
  :IDENTIFIER => 8,
  :IF => 9,
  :ELSE => 10,
  :END => 11,
  "*" => 12,
  "/" => 13,
  "+" => 14,
  "-" => 15,
  "==" => 16,
  "!=" => 17,
  "=" => 18,
  "," => 19,
  "(" => 20,
  ")" => 21,
  ";" => 22 }

racc_nt_base = 23

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "NUMBER",
  "STRING",
  "NEWLINE",
  "TRUE",
  "FALSE",
  "DEF",
  "IDENTIFIER",
  "IF",
  "ELSE",
  "END",
  "\"*\"",
  "\"/\"",
  "\"+\"",
  "\"-\"",
  "\"==\"",
  "\"!=\"",
  "\"=\"",
  "\",\"",
  "\"(\"",
  "\")\"",
  "\";\"",
  "$start",
  "Program",
  "Statements",
  "Statement",
  "Terminator",
  "Expression",
  "If",
  "Call",
  "SetLocal",
  "Function",
  "Literal",
  "Operator",
  "GetLocal",
  "Arguments",
  "Args",
  "Params" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'grammar.y', 20)
  def _reduce_1(val, _values, result)
     result = AST.new([]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 21)
  def _reduce_2(val, _values, result)
     result = AST.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 25)
  def _reduce_3(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 26)
  def _reduce_4(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 27)
  def _reduce_5(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 28)
  def _reduce_6(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 29)
  def _reduce_7(val, _values, result)
     result = [] 
    result
  end
.,.,

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

module_eval(<<'.,.,', 'grammar.y', 44)
  def _reduce_16(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 48)
  def _reduce_17(val, _values, result)
     result = NumberNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 49)
  def _reduce_18(val, _values, result)
     result = StringNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 50)
  def _reduce_19(val, _values, result)
     result = TrueNode.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 51)
  def _reduce_20(val, _values, result)
     result = FalseNode.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 55)
  def _reduce_21(val, _values, result)
     result = AddNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 56)
  def _reduce_22(val, _values, result)
     result = SubNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 57)
  def _reduce_23(val, _values, result)
     result = MulNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 58)
  def _reduce_24(val, _values, result)
     result = DivNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 59)
  def _reduce_25(val, _values, result)
     result = EqNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 60)
  def _reduce_26(val, _values, result)
     result = NotEqNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 64)
  def _reduce_27(val, _values, result)
     result = CallNode.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 68)
  def _reduce_28(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 69)
  def _reduce_29(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 73)
  def _reduce_30(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 74)
  def _reduce_31(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 79)
  def _reduce_32(val, _values, result)
     result = GetLocalNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 83)
  def _reduce_33(val, _values, result)
     result = SetLocalNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 87)
  def _reduce_34(val, _values, result)
     result = IfNode.new(val[1], val[2], []) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 88)
  def _reduce_35(val, _values, result)
     result = IfNode.new(val[1], val[2], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 92)
  def _reduce_36(val, _values, result)
     result = DefNode.new(val[1], [], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 93)
  def _reduce_37(val, _values, result)
     result = DefNode.new(val[1], val[3], val[5]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 97)
  def _reduce_38(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 98)
  def _reduce_39(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

# reduce 40 omitted

# reduce 41 omitted

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser

if __FILE__ == $0
  puts Parser.new.parse(File.read(ARGV[0])).inspect
end
